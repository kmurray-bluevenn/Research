<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Bullet Chart Demo</title>
	<style>
		.chartBody
		{
			width: 500px;
			height: 70px;
			background-color: #89B6CB;
			-webkit-border-radius: 5px;
			-moz-border-radius: 5px;
			-ms-border-radius: 5px;
			-o-border-radius: 5px;
			border-radius: 5px;
		}
	</style>
	<link href="../../implementation/dashboard/charting/bullet/style/style.css" rel="stylesheet" />
	<script src="../../implementation/dashboard/core/3rdParty/jquery-1.9.1.js"></script>
	<script src="../../implementation/dashboard/core/3rdParty/d3.v3.js"></script>
	<script src="../../implementation/dashboard/core/application/scripts/Margin.js"></script>
	<script src="../../implementation/dashboard/core/application/scripts/BaseChartOptions.js"></script>
	<script src="../../implementation/dashboard/core/application/scripts/BaseChart.js"></script>
	<script src="../../implementation/dashboard/charting/bullet/models/bulletOptions.js"></script>
	<script src="../../implementation/dashboard/charting/bullet/Bullet.js"></script>
</head>
<body>
	<section>
		<article>
			<header>
				<h3>Bullet Chart Demo</h3>
			</header>
			<p>This is a test harness to test the Bullet chart control</p>
			<p><span style="font-size: smaller">This is only a harness, and as such the html should not be considered best practises</span></p>
		</article>
		<article>
			<div id="chartspace" class="chartBody"></div>
		</article>
		<article>
			<header>
				<h4>Options</h4>
			</header>
			<fieldset style="width: 300px">
				<legend>Data</legend>
				<input type="button" onclick="toggleTimer(this)" id="timer" value="Disable Auto Refresh" />
				<input type="button" onclick="randomData()" value="Update" style="margin-top: 10px" />
			</fieldset>
			<fieldset style="width: 300px">
				<legend>Options</legend>
				<input type="button" value="Supply Options" onclick="showOptions(this)" />
				<div id="divOptions" style="display: none">
					<p>
						<label>Length of Transitions</label>
						<input type="number" id="numDuration" value="400" onblur="changeOptions()" />
					</p>
					<p>
						<label>Reverse</label>
						<input type="checkbox" id="chkReverse" onchange="changeOptions()" />
					</p>
					<p>
						<label>Supply Chart Dimensions</label>
						<input type="checkbox" id="chkDimensions" onchange="dime()" />
					</p>
					<div id="dimensions" style="display: none">
						<p>Dimensions</p>
						<p>
							<input type="number" id="dWidth" value="400" onchange="changeOptions()" /><label for="dWidth">width</label>
							<input type="number" id="dHeight" value="50" onchange="changeOptions()" /><label for="dHeight">height</label>
						</p>
					</div>
					<p>
						<label>Enable Measure Tooltip</label>
						<input type="checkbox" id="showMeasureLabel" onchange="changeOptions()" />
					</p>
					<p>
						<label>Enable Range Tooltip</label>
						<input type="checkbox" id="showRangeLabel" onchange="changeOptions()" />
					</p>
					<p>
						<label>Enable Marker ToolTip</label>
						<input type="checkbox" id="showMarkerLabel" onchange="changeOptions()" />
					</p>
					<p>
						<label>Margins</label>
						<br />
						<input type="number" id="top" value="5" onblur="changeOptions()" /><label for="top">top</label>
						<input type="number" id="right" value="20" onblur="changeOptions()" /><label for="right">right</label>
						<input type="number" id="bottom" value="20" onblur="changeOptions()" /><label for="bottom">bottom</label>
						<input type="number" id="left" value="70" onblur="changeOptions()" /><label for="left">left</label>
					</p>
					<p>
						<label>Tick Postfix</label>
						<input type="text" id="postfix" onblur="changeOptions()" />
					</p>
				</div>
			</fieldset>
			<fieldset style="width: 500px">
				<legend>Todo & Feature request</legend>
				<ul>
					<li>PP 8/5/13- Do we need to include an option to change "Measure" colours if they are under or over the markers?</li>
				</ul>
			</fieldset>
		</article>
	</section>
	<script type="text/javascript">
		var model = {
			title: "Title",
			subtitle: "Subtitle",
			ranges: [{ label: "range 1", value: 380 }, { label: "range 2", value: 500 }],
			measures: [{ label: "measure1", value: 470 }, { label: "measure2", value: 300 }],
			markers: [{ label: "marker1", value: 350 }]
		};

		function getDefaultOptions() {
			return new dashboard.campaign.widget.chart.bullet.models.BulletOptions(400, 50, getMargins());
		}

		var d = new dashboard.campaign.widget.chart.Bullet("chartspace", getDefaultOptions(), function(data) { return data; });
		d.render();

		function randomData() {
			try {
				for (var i = 0; i < 2; i++) {
					model.ranges[i].value = Math.floor((Math.random() * 500) + 1);
					model.measures[i].value = Math.floor((Math.random() * 500) + 1);
				}
				model.markers[0].value = Math.floor((Math.random() * 500) + 1);
				d.update(model);
			}
			catch (error) { }
		}

		var timer = window.setInterval(randomData, 3000);

		function toggleTimer(evt) {
			if (evt.value === "Disable Auto Refresh") {
				window.clearInterval(timer);
				evt.value = "Enable Auto Refresh";
			} else {
				timer = window.setInterval(randomData, 3000);
				evt.value = "Disable Auto Refresh";
			}
		}

		function showOptions(obj) {
			if (obj.value === "Supply Options") {
				obj.value = "Use Control Defaults";
				d = new dashboard.campaign.widget.chart.Bullet("chartspace", getOptions(), function (data) { return data; });
				d.el = "#chartspace";
				d.data = model;
				d.render();
				$("#divOptions").show();
			} else {
				obj.value = "Supply Options";
				$("#divOptions").hide();
				d = new dashboard.campaign.widget.chart.Bullet("chartspace", getDefaultOptions(), function (data) { return data; });
				d.el = "#chartspace";
				d.data = model;
				d.render();
			}
		}

		function dime() {
			if ($("#chkDimensions").prop('checked')) {
				$("#dimensions").show();
				changeOptions();
			} else {

				$("#dimensions").hide();
				changeOptions();
			}
		}
		function changeOptions() {
			d = new dashboard.campaign.widget.chart.Bullet("chartspace", getOptions(), function (data) { return data; });
			d.el = "#chartspace";
			d.data = model;
			d.render();
		}

		function getOptions() {
			var options = new dashboard.campaign.widget.chart.bullet.models.BulletOptions();
			options.width = 400;
			options.height = 50;
			options.margin = getMargins();
			options.reverse = $("#chkReverse").prop('checked');
			options.updateDuration = parseInt($("#numDuration").val());
			options.showMeasureLabel = $("#showMeasureLabel").prop('checked');
			options.showRangeLabel = $("#showRangeLabel").prop('checked');
			options.showMarkerLabel = $("#showMarkerLabel").prop('checked');
			options.tickPostfix = $("#postfix").val();

			if ($("#chkDimensions").prop('checked')) {
				options.useParentDimensions = false;
				options.width = parseInt($("#dWidth").val());
				options.height = parseInt($("#dHeight").val());
			} else {
				options.useParentDimensions = true;
			}
			return options;
		}

		function getMargins() {
			return new dashboard.campaign.widget.chart.models.Margin(
						parseInt($("#top").val()),
						parseInt($("#bottom").val()),
						parseInt($("#left").val()),
						parseInt($("#right").val())
				);
		}
	</script>
</body>
</html>
